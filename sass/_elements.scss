@use './variables.scss' as var;
@use './mixins.scss';

::selection:not(img, iframe) {
    background: var(--alert);
    color: var(--background);
}

*:focus {
  outline: .125em dashed var(--alert);
  outline-offset: .5em;
}

@media (prefers-color-scheme: dark) {
    ::selection:not(img, iframe) {
    background: var(--warning);
}

    *:focus {
      outline: .125em dashed var(--warning);
    }
}

html {
    font-family: Helvetica Neue, Helvetica, Futura, Trebuchet MS, Arial,
        sans-serif;
    font-size: 24px;
    font-weight: 500;
    overflow-x: hidden;
    background: var(--background);
    color: var(--foreground);
    width:100vw;
}
@media screen and (prefers-reduced-motion: no-preference) { 
    html {
      scroll-behavior: smooth;
    }
}
@media (prefers-reduced-motion: no-preference) and (min-width: var.$breakpoint) {
    html {
        scroll-behavior: auto;
    }
}
body {
    overflow-x: hidden;
}
footer {
    min-height: 20vh;
    @include mixins.invert;
}
@media (prefers-color-scheme: dark){
    footer {
        background: var(--background);
        color: var(--foreground);
    }
}
h1,
h2,
h3,
h4,
h5,
h6 {
    margin: .5em 0 1.5em;    
}
h1,
h2,
h3,
h4,
h5,
h6,
.heading-style-1,
.heading-style-2,
.heading-style-3,
.heading-style-4,
.heading-style-5,
.heading-style-6 {
    font-weight: bold;
    white-space: pre-line;
}
h1, .heading-style-1 {
    font-size: clamp(1rem * var.$goldenRatio * 1.25, 1vw * var.$goldenRatio * 6, 1em * var.$goldenRatio * 6);
    margin: 4vh 0 1vh;
    padding: max(1rem, 4vh) 1rem;
    line-height: 1;
}
@media (min-width: var.$breakpoint) { 
    h1, .heading-style-1 {
        padding: 0;
    }
}

h2, .heading-style-2 {
    font-size: clamp(1rem * var.$goldenRatio * 1.25, 1vw * var.$goldenRatio * 4, 1em * var.$goldenRatio * 3);
    margin-top: clamp(1rem * var.$goldenRatio * 1.25, 4vh * var.$goldenRatio * 4, 1em * var.$goldenRatio * 3);
    padding-top: clamp(1rem * var.$goldenRatio * 1.25, 1vh * var.$goldenRatio * 4, 1em * var.$goldenRatio * 3);
}

h3, .heading-style-3 {
    margin-top: clamp(1rem * var.$goldenRatio, 4vh * var.$goldenRatio * 3, 1em * var.$goldenRatio * 2);
    padding-top: clamp(1rem * var.$goldenRatio, 1vh * var.$goldenRatio * 3, 1em * var.$goldenRatio * 2);
    font-size: clamp(1rem * var.$goldenRatio, 1vw * var.$goldenRatio * 3, 1em * var.$goldenRatio * 2);
}

h4, .heading-style-4 {
    margin-top: clamp(1rem * var.$goldenRatio, 3vh * var.$goldenRatio * 2, 1em * var.$goldenRatio * 2);
    padding-top: clamp(1rem * var.$goldenRatio, 1vh * var.$goldenRatio * 2, 1em * var.$goldenRatio);
    font-size: clamp(.9rem * var.$goldenRatio, .95vw * var.$goldenRatio * 2, .95em * var.$goldenRatio);
    line-height: 1.1em;
}
@media (min-width: var.$breakpoint) { 
    h4, .heading-style-4 {
        line-height: calc(1em + 0.6rem);
    }
}
h5 {
    margin-top: clamp(1rem * var.$goldenRatio, 2vh * var.$goldenRatio, 1em * var.$goldenRatio * 2);
    padding-top: clamp(1rem * var.$goldenRatio, 1vh * var.$goldenRatio, 1em * var.$goldenRatio * .9);
}
h5, .heading-style-5 {
    font-size: clamp(.85rem * var.$goldenRatio, .9vw * var.$goldenRatio * 1.5, .9em * var.$goldenRatio);
}
h6, .heading-style-6 {
    margin-top: clamp(1rem * var.$goldenRatio, 1vh * var.$goldenRatio, 1em * var.$goldenRatio * 2);
    padding-top: clamp(1rem * var.$goldenRatio, 1vh * var.$goldenRatio * .75, 1em * var.$goldenRatio * .8);
    font-size: clamp(.8rem * var.$goldenRatio, .8vw * var.$goldenRatio, .8em * var.$goldenRatio);
}
p {
    margin: 1em 0;
}

nav:not(.toc) {

    & li {
        list-style: none;
        margin-right: 1em;

        &:last-child {
            margin-right: 0;
        }
    }
}

img {
    font-family: inherit;
    font-weight: 500;
    line-height: 2;
    text-align: center;
    margin-top: 10px;
    min-width: 50px;
    height: auto;
    display: block;
    position: relative;
    min-height: 50px;
}

img:before {
    content: " ";
    display: block;
    position: absolute;
    top: -10px;
    left: 0;
    height: calc(100% + 10px);
    width: 100%;
    background-color: var(--background);
    border: 2px dotted rgb(200, 200, 200);
    border-radius: 5px;
}

img:after {
    content: "üèû Broken Image of "attr(alt);
    display: block;
    font-size: 16px;
    font-style: normal;
    color: var(--foreground);
    position: absolute;
    top: 5px;
    left: 0;
    width: 100%;
    text-align: center;
}

details {
    background: rgba(0, 0, 0, .25);
    display: inline-block;
    padding: 0.5em 1em;

    &:hover {
        cursor: pointer;
    }

    &[open] summary {
        border-bottom-width: 2px;
        border-bottom-style: dotted;
        margin-bottom: .5em;
    }
}

blockquote {
    border-left: .25em solid;
    padding-left: .5em;
}

strong {
    font-weight: 900;
}

ul ul li,
ol ol li {
    font-size: .9em;
}

ul ul ul li,
ol ol ol li {
    font-size: .9em;
}

hr {
    border-color: currentColor;
    background: currentColor;
    border-style: solid;
    border-width: 0.125em;
    margin: 4em 0;
    border-radius: 1em;
}

code {
    word-break: break-all;
    white-space: pre-line;
}

code[class*=language-],
pre[class*=language-] {
    word-break: break-all;
    white-space: pre-line;
}

@media (min-width: var.$breakpoint) {
    code {
        word-break: keep-all;
    }
}

code:not([class*=language-]) {
    display: inline-block;
    background: rgba(255, 255, 255, .1);
    padding-left: 0.4em;
    padding-right: 0.2em;
    border-radius: 0.1em;
    outline: 1px solid rgba(0, 0, 0, .5);
}

dt {
    font-weight: 900;
    margin-top: clamp(1rem * var.$goldenRatio, 2vh * var.$goldenRatio, 1em * var.$goldenRatio * 2);
    padding-top: clamp(1rem * var.$goldenRatio, 1vh * var.$goldenRatio, 1em * var.$goldenRatio * .9);
    font-size: clamp(.9rem * var.$goldenRatio, .9vw * var.$goldenRatio * 1.5, .9em * var.$goldenRatio);
}

dt:after {
    font-family: monospace;
    content: " ‚Üí"
}

iframe {
    max-width: 100%;
}

.svg-fill {
    fill: var(--foreground);
    stroke: var(--foreground);
    &--inverted {
        fill: var(--background);
        stroke: var(--background);
    }
}
@media (min-width: var.$breakpoint) {
    .svg-fill {
        &--inverted {
        fill: var(--foreground);
        stroke: var(--foreground);
    }
}
}
